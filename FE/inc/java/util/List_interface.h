///////////////////////////////////////////////////////////////////////
//This header file was generated by FMI code generator.
//FMI Version: 7.6; Build: 2
//It represents the Java object 'List_interface'.
//This file includs the necessary wrappings for the JNI calls to the Java object.


#if !defined JAVA_UTIL_LIST_INTERFACE_H
	#define JAVA_UTIL_LIST_INTERFACE_H



#include "com/mintech/utils/fmi/JNIException.h"
#include "com/mintech/utils/fmi/JNIError.h"
#include "com/mintech/utils/fmi/FMIException.h"
#include "java/lang/Object_interface.h"
#include "java/util/Collection_interface.h"

#include "com/mintech/utils/fmi/builtin/arrays/FObjectArray.h"


namespace com{
	namespace mintech{
		namespace utils{
			namespace fmi{
class JNIException;
}}}}

namespace com{
	namespace mintech{
		namespace utils{
			namespace fmi{
class FMIException;
}}}}

namespace com{
	namespace mintech{
		namespace utils{
			namespace fmi{
				namespace builtin{
					namespace arrays{
class FObjectArray;
}}}}}} //Close namespace

namespace java{
	namespace lang{
class Object;
}} //Close namespace

namespace java{
	namespace util{
class Collection;
}} //Close namespace

namespace java{
	namespace util{
class Iterator;
}} //Close namespace

namespace java{
	namespace util{
class List;
}} //Close namespace

namespace java{
	namespace util{
class ListIterator;
}} //Close namespace

namespace java{
	namespace util{
class Collection_interface;
}} //Close namespace


using namespace com::mintech::utils::fmi;
using namespace com::mintech::utils::fmi::builtin::arrays;
using namespace java::lang;
using namespace java::util;

namespace java{
	namespace util{
class List_interface;

class DLL_EXPORT List_interface :  public java::util::Collection_interface
{
public:
//Public Methods
	//Destructor
	virtual ~List_interface() { }

	virtual void add(const jint p1, const Object& p2) = 0;

	virtual bool add(const Object& p1) = 0;

	virtual jint indexOf(const Object& p1) = 0;

	virtual void clear() = 0;

	virtual bool contains(const Object& p1) = 0;

	virtual bool isEmpty() = 0;

	virtual jint lastIndexOf(const Object& p1) = 0;

	virtual bool addAll(const jint p1, const Collection& p2) = 0;

	virtual bool addAll(const Collection& p1) = 0;

	virtual java::lang::Object get(const jint p1) = 0;

	virtual java::util::Iterator iterator() = 0;

	virtual jint size() = 0;

	virtual FObjectArray toArray() = 0;

	virtual bool remove(const Object& p1) = 0;

	virtual java::lang::Object remove(const jint p1) = 0;

	virtual java::lang::Object set(const jint p1, const Object& p2) = 0;

	virtual bool containsAll(const Collection& p1) = 0;

	virtual bool removeAll(const Collection& p1) = 0;

	virtual bool retainAll(const Collection& p1) = 0;

	virtual java::util::List subList(const jint p1, const jint p2) = 0;

	virtual java::util::ListIterator listIterator(const jint p1) = 0;

	virtual java::util::ListIterator listIterator() = 0;

	//get method for the object name
	virtual const char* getFullName() = 0;

	//get / set methods for the Java object reference
	virtual jobject getReference() const		{ return m_ref;	}

	virtual void setReference(jobject ref)		{ m_ref = ref;	}

};

}} //Close namespace



#endif
