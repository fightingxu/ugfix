///////////////////////////////////////////////////////////////////////
// this header file was generated by FMI code generator.
// FMI Version: 7.6; Build: 2
// it represents the Java object 'URLConnection'.
// this file includes the necessary wrappings for the JNI calls to the Java object.


#if !defined JAVA_NETURLCONNECTION_STUB_H
	#define JAVA_NETURLCONNECTION_STUB_H




namespace com{
	namespace mintech{
		namespace utils{
			namespace fmi{
class JNIException;
}}}}

namespace com{
	namespace mintech{
		namespace utils{
			namespace fmi{
class FMIException;
}}}}

namespace java{
	namespace net{
class URL;
}} // close namespace

namespace java{
	namespace security{
class Permission;
}} // close namespace

namespace java{
	namespace lang{
class Object;
}} // close namespace

namespace java{
	namespace io{
class InputStream;
}} // close namespace

namespace java{
	namespace net{
class FileNameMap;
}} // close namespace

namespace java{
	namespace util{
class Map;
}} // close namespace

namespace java{
	namespace io{
class OutputStream;
}} // close namespace

namespace java{
	namespace lang{
class Class;
}} // close namespace


using com::mintech::utils::fmi::JNIException;
using java::net::URL;
using java::security::Permission;
using java::lang::Object;
using java::io::InputStream;
using java::net::FileNameMap;
using java::util::Map;
using java::io::OutputStream;
using java::lang::Class;

namespace java{
	namespace net{
class URLConnection_stub;


class DLL_EXPORT URLConnection_stub : public Object_interface
{
public:
//////////////////////
// public Constructors
// these constructors are for the C++ stubs. They do not create Java objects!

	// default constructor
	URLConnection_stub();

	// constructor with jobject parameter for methods that return this object
	URLConnection_stub(jobject obj);

	// destructor
	~URLConnection_stub();

//////////////////
// utility methods
	// initialize all the IDs
	static void initialize();

	// get the object's full name
	virtual const char* getFullName();

	// get the class holder
	jclass getCls();

// end utility methods
//////////////////////

///////////////////////////////////////
// public methods from java.lang.object
	string toString();


// end of methods from java.lang.Object
///////////////////////////////////////


//////////////////////////////////
//URLConnection Public methods
	java::net::URL getURL();

	/* throws java.io.IOException */
	java::security::Permission getPermission();

	/* throws java.io.IOException */
	java::lang::Object getContent();

	/* throws java.io.IOException */
	java::io::InputStream getInputStream();

	/* throws java.io.IOException */
	void connect();

	void setRequestProperty(const string& p1, const string& p2);

	jlong getDate();

	jint getContentLength();

	static 	java::net::FileNameMap getFileNameMap();

	string getHeaderField(const jint p1);

	string getHeaderField(const string& p1);

	string getHeaderFieldKey(const jint p1);

	jlong getLastModified();

	void addRequestProperty(const string& p1, const string& p2);

	string getContentType();

	java::util::Map getRequestProperties();

	string getRequestProperty(const string& p1);

	static 	string guessContentTypeFromName(const string& p1);

	/* throws java.io.IOException */
	static 	string guessContentTypeFromStream(const InputStream& p1);

	bool getAllowUserInteraction();

	jint getConnectTimeout();

	string getContentEncoding();

	static 	bool getDefaultAllowUserInteraction();

	static 	string getDefaultRequestProperty(const string& p1);

	bool getDefaultUseCaches();

	bool getDoInput();

	bool getDoOutput();

	jlong getExpiration();

	jlong getHeaderFieldDate(const string& p1, const jlong p2);

	jint getHeaderFieldInt(const string& p1, const jint p2);

	java::util::Map getHeaderFields();

	jlong getIfModifiedSince();

	/* throws java.io.IOException */
	java::io::OutputStream getOutputStream();

	jint getReadTimeout();

	bool getUseCaches();

	void setAllowUserInteraction(const jboolean p1);

	void setConnectTimeout(const jint p1);

	static 	void setDefaultAllowUserInteraction(const jboolean p1);

	static 	void setDefaultRequestProperty(const string& p1, const string& p2);

	void setDefaultUseCaches(const jboolean p1);

	void setDoInput(const jboolean p1);

	void setDoOutput(const jboolean p1);

	static 	void setFileNameMap(const FileNameMap& p1);

	void setIfModifiedSince(const jlong p1);

	void setReadTimeout(const jint p1);

	void setUseCaches(const jboolean p1);

//////////////////////////////////
// end of URLConnection Public methods

//////////////////////////////
// public data members methods
//end public data members methods
/////////////////////////////////

private:
	// indicates if an instance of this stub has already been created
	static bool m_firstTime;

	// class holder (defined static to allow accessibility to static methods)
	static jclass m_cls;

	// the object's full name
	static char* m_objectName;

private:
	// java.lang.Class getName() method's ID
	static jmethodID m_getName_method_ID;

	// java.lang.Object Methods' IDs
	static jmethodID method_1_ID;

	// methods' IDs
	static jmethodID method_2_ID;
	static jmethodID method_3_ID;
	static jmethodID method_4_ID;
	static jmethodID method_5_ID;
	static jmethodID method_6_ID;
	static jmethodID method_7_ID;
	static jmethodID method_8_ID;
	static jmethodID method_9_ID;
	static jmethodID method_10_ID;
	static jmethodID method_11_ID;
	static jmethodID method_12_ID;
	static jmethodID method_13_ID;
	static jmethodID method_14_ID;
	static jmethodID method_15_ID;
	static jmethodID method_16_ID;
	static jmethodID method_17_ID;
	static jmethodID method_18_ID;
	static jmethodID method_19_ID;
	static jmethodID method_20_ID;
	static jmethodID method_21_ID;
	static jmethodID method_22_ID;
	static jmethodID method_23_ID;
	static jmethodID method_24_ID;
	static jmethodID method_25_ID;
	static jmethodID method_26_ID;
	static jmethodID method_27_ID;
	static jmethodID method_28_ID;
	static jmethodID method_29_ID;
	static jmethodID method_30_ID;
	static jmethodID method_31_ID;
	static jmethodID method_32_ID;
	static jmethodID method_33_ID;
	static jmethodID method_34_ID;
	static jmethodID method_35_ID;
	static jmethodID method_36_ID;
	static jmethodID method_37_ID;
	static jmethodID method_38_ID;
	static jmethodID method_39_ID;
	static jmethodID method_40_ID;
	static jmethodID method_41_ID;
	static jmethodID method_42_ID;
	static jmethodID method_43_ID;
	static jmethodID method_44_ID;
	static jmethodID method_45_ID;
	static jmethodID method_46_ID;
	static jmethodID method_47_ID;

};


}} // close namespace

#endif
