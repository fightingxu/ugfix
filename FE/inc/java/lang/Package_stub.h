///////////////////////////////////////////////////////////////////////
// this header file was generated by FMI code generator.
// FMI Version: 7.6; Build: 2
// it represents the Java object 'Package'.
// this file includes the necessary wrappings for the JNI calls to the Java object.


#if !defined JAVA_LANGPACKAGE_STUB_H
	#define JAVA_LANGPACKAGE_STUB_H


#include "com/mintech/utils/fmi/builtin/arrays/FObjectArray.h"


namespace com{
	namespace mintech{
		namespace utils{
			namespace fmi{
class JNIException;
}}}}

namespace com{
	namespace mintech{
		namespace utils{
			namespace fmi{
class FMIException;
}}}}

namespace com{
	namespace mintech{
		namespace utils{
			namespace fmi{
				namespace builtin{
					namespace arrays{
class FObjectArray;
}}}}}} // close namespace

namespace java{
	namespace lang{
		namespace annotation{
class Annotation;
}}} // close namespace

namespace java{
	namespace lang{
class Class;
}} // close namespace

namespace java{
	namespace lang{
class Package;
}} // close namespace

namespace java{
	namespace net{
class URL;
}} // close namespace

namespace java{
	namespace lang{
class Object;
}} // close namespace


using com::mintech::utils::fmi::JNIException;
using com::mintech::utils::fmi::builtin::arrays::FObjectArray;
using java::lang::annotation::Annotation;
using java::lang::Class;
using java::lang::Package;
using java::net::URL;
using java::lang::Object;

namespace java{
	namespace lang{
class Package_stub;


class DLL_EXPORT Package_stub : public Object_interface
{
public:
//////////////////////
// public Constructors
// these constructors are for the C++ stubs. They do not create Java objects!

	// default constructor
	Package_stub();

	// constructor with jobject parameter for methods that return this object
	Package_stub(jobject obj);

	// destructor
	~Package_stub();

//////////////////
// utility methods
	// initialize all the IDs
	static void initialize();

	// get the object's full name
	virtual const char* getFullName();

	// get the class holder
	jclass getCls();

// end utility methods
//////////////////////

///////////////////////////////////////
// public methods from java.lang.object
	string toString();


// end of methods from java.lang.Object
///////////////////////////////////////


//////////////////////////////////
//Package Public methods
	string getName();

	java::lang::annotation::Annotation getAnnotation(const Class& p1);

	FObjectArray getAnnotations();

	FObjectArray getDeclaredAnnotations();

	static 	java::lang::Package getPackage(const string& p1);

	bool isAnnotationPresent(const Class& p1);

	static 	FObjectArray getPackages();

	bool isSealed();

	bool isSealed(const URL& p1);

	/* throws java.lang.NumberFormatException */
	bool isCompatibleWith(const string& p1);

	string getImplementationTitle();

	string getImplementationVendor();

	string getImplementationVersion();

	string getSpecificationTitle();

	string getSpecificationVendor();

	string getSpecificationVersion();

//////////////////////////////////
// end of Package Public methods

//////////////////////////////
// public data members methods
//end public data members methods
/////////////////////////////////

private:
	// indicates if an instance of this stub has already been created
	static bool m_firstTime;

	// class holder (defined static to allow accessibility to static methods)
	static jclass m_cls;

	// the object's full name
	static char* m_objectName;

private:
	// java.lang.Class getName() method's ID
	static jmethodID m_getName_method_ID;

	// java.lang.Object Methods' IDs
	static jmethodID method_1_ID;

	// methods' IDs
	static jmethodID method_2_ID;
	static jmethodID method_3_ID;
	static jmethodID method_4_ID;
	static jmethodID method_5_ID;
	static jmethodID method_6_ID;
	static jmethodID method_7_ID;
	static jmethodID method_8_ID;
	static jmethodID method_9_ID;
	static jmethodID method_10_ID;
	static jmethodID method_11_ID;
	static jmethodID method_12_ID;
	static jmethodID method_13_ID;
	static jmethodID method_14_ID;
	static jmethodID method_15_ID;
	static jmethodID method_16_ID;
	static jmethodID method_17_ID;

};


}} // close namespace

#endif
