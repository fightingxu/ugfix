///////////////////////////////////////////////////////////////////////
// this header file was generated by FMI code generator.
// FMI Version: 7.6; Build: 2
// it represents the Java object 'CManagedAPI'.
// this file includes the necessary wrappings for the JNI calls to the Java object.


#if !defined COM_SUNGARD_CS_FIX_FIXGATEWAY_API_CAPICMANAGEDAPI_STUB_H
	#define COM_SUNGARD_CS_FIX_FIXGATEWAY_API_CAPICMANAGEDAPI_STUB_H


#include "com/mintech/utils/fmi/builtin/arrays/FObjectArray.h"


namespace com{
	namespace mintech{
		namespace utils{
			namespace fmi{
class JNIException;
}}}}

namespace com{
	namespace mintech{
		namespace utils{
			namespace fmi{
class FMIException;
}}}}

namespace com{
	namespace mintech{
		namespace utils{
			namespace fmi{
				namespace builtin{
					namespace arrays{
class FObjectArray;
}}}}}} // close namespace

namespace com{
	namespace sungard{
		namespace cs{
			namespace fix{
				namespace fixgateway{
					namespace api{
						namespace capi{
class CManagedAPI;
}}}}}}} // close namespace

namespace java{
	namespace lang{
class String;
}} // close namespace

namespace com{
	namespace sungard{
		namespace cs{
			namespace fix{
				namespace fixgateway{
					namespace api{
						namespace capi{
class CProperties;
}}}}}}} // close namespace

namespace com{
	namespace sungard{
		namespace cs{
			namespace fix{
				namespace fixgateway{
					namespace api{
						namespace capi{
class CFixListenerRef;
}}}}}}} // close namespace

namespace com{
	namespace sungard{
		namespace cs{
			namespace fix{
				namespace fixgateway{
					namespace api{
						namespace capi{
class CFixStatus;
}}}}}}} // close namespace

namespace com{
	namespace sungard{
		namespace cs{
			namespace fix{
				namespace fixgateway{
					namespace api{
						namespace capi{
class CMessageHandle;
}}}}}}} // close namespace

namespace com{
	namespace sungard{
		namespace cs{
			namespace fix{
				namespace fixgateway{
					namespace api{
						namespace capi{
class CStatesHash;
}}}}}}} // close namespace

namespace com{
	namespace sungard{
		namespace cs{
			namespace fix{
				namespace fixgateway{
					namespace api{
						namespace capi{
class CMessageEnum;
}}}}}}} // close namespace

namespace com{
	namespace sungard{
		namespace cs{
			namespace fix{
				namespace fixgateway{
					namespace api{
						namespace capi{
class CLogFactory;
}}}}}}} // close namespace

namespace java{
	namespace lang{
class Class;
}} // close namespace

namespace java{
	namespace lang{
class Object;
}} // close namespace


using com::mintech::utils::fmi::JNIException;
using com::mintech::utils::fmi::builtin::arrays::FObjectArray;
using com::sungard::cs::fix::fixgateway::api::capi::CManagedAPI;
using java::lang::String;
using com::sungard::cs::fix::fixgateway::api::capi::CProperties;
using com::sungard::cs::fix::fixgateway::api::capi::CFixListenerRef;
using com::sungard::cs::fix::fixgateway::api::capi::CFixStatus;
using com::sungard::cs::fix::fixgateway::api::capi::CMessageHandle;
using com::sungard::cs::fix::fixgateway::api::capi::CStatesHash;
using com::sungard::cs::fix::fixgateway::api::capi::CMessageEnum;
using com::sungard::cs::fix::fixgateway::api::capi::CLogFactory;
using java::lang::Class;
using java::lang::Object;

namespace com{
	namespace sungard{
		namespace cs{
			namespace fix{
				namespace fixgateway{
					namespace api{
						namespace capi{
class CManagedAPI_stub;


class DLL_EXPORT CManagedAPI_stub : public Object_interface
{
public:
//////////////////////
// public Constructors
// these constructors are for the C++ stubs. They do not create Java objects!

	// default constructor
	CManagedAPI_stub();

	// constructor with jobject parameter for methods that return this object
	CManagedAPI_stub(jobject obj);

	// destructor
	~CManagedAPI_stub();

//////////////////
// utility methods
	// initialize all the IDs
	static void initialize();

	// get the object's full name
	virtual const char* getFullName();

	// get the class holder
	jclass getCls();

// end utility methods
//////////////////////

///////////////////////////////////////
// public methods from java.lang.object
	string toString();


// end of methods from java.lang.Object
///////////////////////////////////////


//////////////////////////////////
//CManagedAPI Public methods
	jint getState();

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	void close();

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	void open();

	com::sungard::cs::fix::fixgateway::api::capi::CProperties getParameters();

	void newAPI(com::sungard::cs::fix::fixgateway::api::capi::CProperties p1);

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	void attach(const CFixListenerRef& p1);

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	void detach(const CFixListenerRef& p1);

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	void controlCommand(const string& p1);

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	void sendMessage(const string& p1);

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	com::sungard::cs::fix::fixgateway::api::capi::CFixStatus getStatus(const string& p1);

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	com::sungard::cs::fix::fixgateway::api::capi::CFixStatus getStatus();

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	com::sungard::cs::fix::fixgateway::api::capi::CMessageHandle getRejectedMessage(const string& p1);

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	com::sungard::cs::fix::fixgateway::api::capi::CMessageHandle getRejectedMessage(const CMessageHandle& p1);

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	void putLogLine(const string& p1, const jint p2);

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	com::sungard::cs::fix::fixgateway::api::capi::CStatesHash getStates();

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	void resendMessage(const string& p1);

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	void restoreIncomingMessages(const string& p1, const jlong p2, const jint p3, const jint p4, const jboolean p5);

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	void restoreIncomingMessages(const jlong p1, const jlong p2, const jint p3, const jboolean p4);

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	com::sungard::cs::fix::fixgateway::api::capi::CMessageEnum getIncomingMessages(const string& p1, const jlong p2, const jint p3, const jint p4);

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	com::sungard::cs::fix::fixgateway::api::capi::CMessageEnum getIncomingMessages(const jlong p1, const jlong p2, const jint p3);

	jlong millisToKey(const jlong p1);

	void startDispatcher();

	void stopDispatcher();

	void startRealtimeDispatcher();

	void stopRealtimeDispatcher();
	
	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	com::sungard::cs::fix::fixgateway::api::capi::CMessageHandle receiveMessage();

	/* throws com.sungard.cs.fix.fixgateway.api.FIXException */
	void advanceMessage();

	com::sungard::cs::fix::fixgateway::api::capi::CLogFactory getLogFactory();

	static 	string get_reasonDescr(const jint p1);

	static 	string get_appStateDescr(const jint p1);

	static 	string get_stateDescr(const jint p1);

//////////////////////////////////
// end of CManagedAPI Public methods

//////////////////////////////
// public data members methods
	////////////////////////////////////////
	// public data members retrieval methods
	//'final' fields
	static jint get_CLOSED();

	static jint get_CONNECTING();

	static jint get_OPEN();

	static jint get_DISCONNECTING();

	static jint get_ERROR();

	static FObjectArray get_stateDescr();

	static jint get_OFF_THE_SHELF_APPLICATION_STOPPED();

	static jint get_OFF_THE_SHELF_APPLICATION_STARTED();

	static FObjectArray get_appStateDescr();

	static jint get_API_REQUEST();

	static jint get_PARTNER_REQUEST();

	static jint get_ENCRYPTION_PROBLEM();

	static jint get_CONNECTION_REFUSED();

	static jint get_PARTNER_REJECT();

	static jint get_SEQUENCE_NUMBER();

	static jint get_COMM_PROBLEM();

	static jint get_IN_SYNC();

	static jint get_DATA_PROB();

	static FObjectArray get_reasonDescr();

	//////////////////////////////////
	// public data members set methods
//end public data members methods
/////////////////////////////////

private:
	// indicates if an instance of this stub has already been created
	static bool m_firstTime;

	// class holder (defined static to allow accessibility to static methods)
	static jclass m_cls;

	// the object's full name
	static char* m_objectName;

private:
	// java.lang.Class getName() method's ID
	static jmethodID m_getName_method_ID;

	// java.lang.Object Methods' IDs
	static jmethodID method_1_ID;

	// methods' IDs
	static jmethodID method_2_ID;
	static jmethodID method_3_ID;
	static jmethodID method_4_ID;
	static jmethodID method_5_ID;
	static jmethodID method_6_ID;
	static jmethodID method_7_ID;
	static jmethodID method_8_ID;
	static jmethodID method_9_ID;
	static jmethodID method_10_ID;
	static jmethodID method_11_ID;
	static jmethodID method_12_ID;
	static jmethodID method_13_ID;
	static jmethodID method_14_ID;
	static jmethodID method_15_ID;
	static jmethodID method_16_ID;
	static jmethodID method_17_ID;
	static jmethodID method_18_ID;
	static jmethodID method_19_ID;
	static jmethodID method_20_ID;
	static jmethodID method_21_ID;
	static jmethodID method_22_ID;
	static jmethodID method_23_ID;
	static jmethodID method_24_ID;
	static jmethodID method_25_ID;
	static jmethodID method_26_ID;
	static jmethodID method_27_ID;
	static jmethodID method_28_ID;
	static jmethodID method_29_ID;
	static jmethodID method_30_ID;
	static jmethodID method_31_ID;
	static jmethodID method_32_ID;
	
	// IDs for static data members
	static jfieldID staticField_1_ID;
	static jfieldID staticField_2_ID;
	static jfieldID staticField_3_ID;
	static jfieldID staticField_4_ID;
	static jfieldID staticField_5_ID;
	static jfieldID staticField_6_ID;
	static jfieldID staticField_7_ID;
	static jfieldID staticField_8_ID;
	static jfieldID staticField_9_ID;
	static jfieldID staticField_10_ID;
	static jfieldID staticField_11_ID;
	static jfieldID staticField_12_ID;
	static jfieldID staticField_13_ID;
	static jfieldID staticField_14_ID;
	static jfieldID staticField_15_ID;
	static jfieldID staticField_16_ID;
	static jfieldID staticField_17_ID;
	static jfieldID staticField_18_ID;
	static jfieldID staticField_19_ID;

};


}}}}}}} // close namespace

#endif
